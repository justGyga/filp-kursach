{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -Wno-unrecognised-pragmas #-}

{-# HLINT ignore "Use when" #-}
module SQLplotter where

import           Data.String            (fromString)
import           Database.SQLite.Simple
import           System.Directory       (doesFileExist, removeFile)

-- Функция для добавления таблицы сессий
addSessionTable :: IO ()
addSessionTable = do
  dbExists <- doesFileExist "session.db"
  if dbExists
    then removeFile "session.db"
    else return ()

  sqlConnection <- open "session.db"
  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS session ("
          ++ "id INTEGER PRIMARY KEY"
          ++ ");"
    )
  close sqlConnection

-- Функция для добавления пользовательской сессии
addUserSession :: Integer -> IO ()
addUserSession userId = do
  sqlConnection <- open "session.db"
  execute sqlConnection "INSERT INTO session (id) VALUES (?)" (Only userId)
  close sqlConnection

-- Функция для получения пользовательской сессии
getUserSession :: IO Integer
getUserSession = do
  sqlConnection <- open "session.db"
  result <- query_ sqlConnection "SELECT id FROM session LIMIT 1;" :: IO [Only Integer]
  close sqlConnection
  case result of
    [Only userId] -> return userId
    _             -> return (-1)

-- Функция инициализации базы данных
initializeDB :: IO ()
initializeDB = do
  dbExists <- doesFileExist "local.db"
  if dbExists
    then do
      putStrLn "------------------------------------"
      putStrLn "------------------------------------"
      putStrLn "---------- Очищение таблиц ---------"
      putStrLn "------------------------------------"
      putStrLn "------------------------------------"
      removeFile "local.db"
    else return ()

  sqlConnection <- open "local.db"
  putStrLn "------------------------------------"
  putStrLn "------------------------------------"
  putStrLn "---------- Создание таблиц ---------"
  putStrLn "------------------------------------"
  putStrLn "------------------------------------"

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS addresses ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "state VARCHAR(100) NOT NULL,"
          ++ "city VARCHAR(100) NOT NULL,"
          ++ "district VARCHAR(100) NOT NULL,"
          ++ "\"postalCode\" VARCHAR(20),"
          ++ "\"streetName\" VARCHAR(255) NOT NULL,"
          ++ "\"houseNumber\" VARCHAR(50),"
          ++ "entrance INTEGER,"
          ++ "\"doorNumber\" INTEGER"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS wallets ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "balance FLOAT"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS users ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "name VARCHAR(255),"
          ++ "surname VARCHAR(255),"
          ++ "email VARCHAR(255),"
          ++ "password VARCHAR(255),"
          ++ "wallet INTEGER,"
          ++ "FOREIGN KEY (wallet) REFERENCES wallets(id)"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS ads ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "seller INTEGER,"
          ++ "\"objectId\" INTEGER,"
          ++ "\"objectType\" INTEGER,"
          ++ "cost FLOAT,"
          ++ "description TEXT,"
          ++ "\"dealType\" INTEGER, "
          ++ "FOREIGN KEY (seller) REFERENCES users(id)"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS meetings ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "buyer INTEGER,"
          ++ "\"adId\" INTEGER,"
          ++ "date DATE,"
          ++ "FOREIGN KEY (buyer) REFERENCES users(id),"
          ++ "FOREIGN KEY (\"adId\") REFERENCES ads(id)"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS deals ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "buyer INTEGER,"
          ++ "\"adId\" INTEGER,"
          ++ "status VARCHAR(255),"
          ++ "date DATE,"
          ++ "\"finalCost\" FLOAT,"
          ++ "FOREIGN KEY (buyer) REFERENCES users(id),"
          ++ "FOREIGN KEY (\"adId\") REFERENCES ads(id)"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS flats ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "area INTEGER,"
          ++ "\"roomCount\" INTEGER,"
          ++ "\"addressId\" INTEGER,"
          ++ "floor INTEGER,"
          ++ "\"floorsCount\" INTEGER,"
          ++ "\"balconyArea\" INTEGER,"
          ++ "\"ot\" INTEGER DEFAULT 1, "
          ++ "FOREIGN KEY (\"addressId\") REFERENCES addresses(id)"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS houses ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "area INTEGER,"
          ++ "\"areaType\" INTEGER,"
          ++ "\"addressId\" INTEGER,"
          ++ "\"roomCount\" INTEGER,"
          ++ "\"floorsCount\" INTEGER,"
          ++ "\"basementArea\" INTEGER,"
          ++ "\"ot\" INTEGER DEFAULT 2, "
          ++ "FOREIGN KEY (\"addressId\") REFERENCES addresses(id)"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS \"landPlot\" ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "area INTEGER,"
          ++ "\"landCategory\" INTEGER,"
          ++ "\"addressId\" INTEGER,"
          ++ "\"ot\" INTEGER DEFAULT 3, "
          ++ "FOREIGN KEY (\"addressId\") REFERENCES addresses(id)"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS garages ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "area INTEGER,"
          ++ "security BOOLEAN,"
          ++ "\"addressId\" INTEGER,"
          ++ "\"ot\" INTEGER DEFAULT 4, "
          ++ "FOREIGN KEY (\"addressId\") REFERENCES addresses(id)"
          ++ ");"
    )

  execute_
    sqlConnection
    ( fromString $
        "CREATE TABLE IF NOT EXISTS \"commercialRealEstates\" ("
          ++ "id INTEGER PRIMARY KEY AUTOINCREMENT,"
          ++ "area INTEGER,"
          ++ "\"objectType\" INTEGER,"
          ++ "\"addressId\" INTEGER,"
          ++ "\"ot\" INTEGER DEFAULT 5, "
          ++ "FOREIGN KEY (\"addressId\") REFERENCES addresses(id)"
          ++ ");"
    )

  close sqlConnection

-- Функция для заполнения базы данных начальными данными
seedDB :: IO ()
seedDB = do
  sqlConnection <- open "local.db"

  putStrLn "------------------------------------"
  putStrLn "------------------------------------"
  putStrLn "------ Заполнение базы данных ------"
  putStrLn "------------------------------------"
  putStrLn "------------------------------------"

  -- Вставка данных в таблицу addresses (добавлены новые адреса)
  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO addresses (state, city, district, \"postalCode\", \"streetName\", \"houseNumber\", entrance, \"doorNumber\") VALUES "
          ++ "('Томская область', 'Томск', 'Кировский', '100001', 'Нахимова', '12', 1, 101),"
          ++ "('Томская область', 'Томск', 'Кировский', '100002', 'Нахимова', '13', 1, 102),"
          ++ "('Томская область', 'Томск', 'Советский', '100010', 'Елизаровых', '21', 5, 110),"
          ++ "('Томская область', 'Томск', 'Советский', '100011', 'Балтийская', '22', 6, 111),"
          ++ "('Томская область', 'Томск', 'Советский', '100012', 'Елизаровых', '23', 6, 112),"
          ++ "('Томская область', 'Томск', 'Советский', '100016', 'Балтийская', '27', 8, 116),"
          ++ "('Томская область', 'Томск', 'Советский', '100017', 'Комсомольский проспект', '28', 9, 117),"
          ++ "('Томская область', 'Томск', 'Советский', '100021', 'Комсомольский проспект', '32', 11, 121),"
          ++ "('Томская область', 'Томск', 'Советский', '100022', 'Комсомольский проспект', '33', 12, 122),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100006', 'Иркутский тракт', '17', 3, 106),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100007', 'Иркутский тракт', '18', 4, 107),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100008', 'Иркутский тракт', '19', 4, 108),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100009', 'Иркутский тракт', '20', 5, 109),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100013', 'Суворова', '24', 7, 113),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100014', 'Торговая', '25', 7, 114),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100015', 'Ивановского', '26', 8, 115),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100003', 'Большая подгорная', '14', 2, 103),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100004', 'Первомайская', '15', 2, 104),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100005', 'Donskoy pereulok', '16', 3, 105),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100019', 'Первомайская', '30', 10, 119),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100018', 'Проспект мира', '29', 9, 118),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100020', 'Проспект мира', '31', 10, 120),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100023', 'Тихий переулок', '34', 13, 123),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100024', 'Проспект Ленина', '35', 14, 124),"
          ++ "('Томская область', 'Томск', 'Кировский', '100025', 'Усова', '36', 1, 125),"
          ++ "('Томская область', 'Томск', 'Кировский', '100026', 'Усова', '37', 2, 126),"
          ++ "('Томская область', 'Томск', 'Кировский', '100027', 'Вершинина', '38', 1, 127),"
          ++ "('Томская область', 'Томск', 'Кировский', '100028', 'Вершинина', '39', 2, 128),"
          ++ "('Томская область', 'Томск', 'Кировский', '100029', 'Кирова', '40', 1, 129),"
          ++ "('Томская область', 'Томск', 'Советский', '100030', 'Фрунзе', '41', 1, 130),"
          ++ "('Томская область', 'Томск', 'Советский', '100031', 'Фрунзе', '42', 2, 131),"
          ++ "('Томская область', 'Томск', 'Советский', '100032', 'Красноармейская', '43', 1, 132),"
          ++ "('Томская область', 'Томск', 'Советский', '100033', 'Красноармейская', '44', 2, 133),"
          ++ "('Томская область', 'Томск', 'Советский', '100034', 'Герцена', '45', 1, 134),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100035', 'Пушкина', '46', 1, 135),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100036', 'Пушкина', '47', 2, 136),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100037', 'Мичурина', '48', 1, 137),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100038', 'Мичурина', '49', 2, 138),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100039', 'Беленца', '50', 1, 139),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100040', 'Розы Люксембург', '51', 1, 140),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100041', 'Розы Люксембург', '52', 2, 141),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100042', 'Карташова', '53', 1, 142),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100043', 'Карташова', '54', 2, 143),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100044', 'Белинского', '55', 1, 144),"
          ++ "('Томская область', 'Томск', 'Кировский', '100045', 'Тверская', '56', 1, 145),"
          ++ "('Томская область', 'Томск', 'Кировский', '100046', 'Тверская', '57', 2, 146),"
          ++ "('Томская область', 'Томск', 'Кировский', '100047', 'Учебная', '58', 1, 147),"
          ++ "('Томская область', 'Томск', 'Кировский', '100048', 'Учебная', '59', 2, 148),"
          ++ "('Томская область', 'Томск', 'Кировский', '100049', 'Советская', '60', 1, 149),"
          ++ "('Томская область', 'Томск', 'Советский', '100050', 'Алтайская', '61', 1, 150),"
          ++ "('Томская область', 'Томск', 'Советский', '100051', 'Алтайская', '62', 2, 151),"
          ++ "('Томская область', 'Томск', 'Советский', '100052', 'Сибирская', '63', 1, 152),"
          ++ "('Томская область', 'Томск', 'Советский', '100053', 'Сибирская', '64', 2, 153),"
          ++ "('Томская область', 'Томск', 'Советский', '100054', 'Гагарина', '65', 1, 154),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100055', 'Яковлева', '66', 1, 155),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100056', 'Яковлева', '67', 2, 156),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100057', 'Пирогова', '68', 1, 157),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100058', 'Пирогова', '69', 2, 158),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100059', 'Вокзальная', '70', 1, 159),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100060', 'Дзержинского', '71', 1, 160),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100061', 'Дзержинского', '72', 2, 161),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100062', 'Железнодорожная', '73', 1, 162),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100063', 'Железнодорожная', '74', 2, 163),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100064', 'Кулагина', '75', 1, 164),"
          ++ "('Томская область', 'Томск', 'Кировский', '100065', 'Котовского', '76', 1, 165),"
          ++ "('Томская область', 'Томск', 'Кировский', '100066', 'Котовского', '77', 2, 166),"
          ++ "('Томская область', 'Томск', 'Кировский', '100067', 'Красноармейская', '78', 1, 167),"
          ++ "('Томская область', 'Томск', 'Кировский', '100068', 'Красноармейская', '79', 2, 168),"
          ++ "('Томская область', 'Томск', 'Кировский', '100069', 'Ленина', '80', 1, 169),"
          ++ "('Томская область', 'Томск', 'Советский', '100070', 'Лермонтова', '81', 1, 170),"
          ++ "('Томская область', 'Томск', 'Советский', '100071', 'Лермонтова', '82', 2, 171),"
          ++ "('Томская область', 'Томск', 'Советский', '100072', 'Московский тракт', '83', 1, 172),"
          ++ "('Томская область', 'Томск', 'Советский', '100073', 'Московский тракт', '84', 2, 173),"
          ++ "('Томская область', 'Томск', 'Советский', '100074', 'Нахимова', '85', 1, 174),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100075', 'Некрасова', '86', 1, 175),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100076', 'Некрасова', '87', 2, 176),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100077', 'Никитина', '88', 1, 177),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100078', 'Никитина', '89', 2, 178),"
          ++ "('Томская область', 'Томск', 'Октябрьский', '100079', 'Новгородская', '90', 1, 179),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100080', 'Обручева', '91', 1, 180),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100081', 'Обручева', '92', 2, 181),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100082', 'Пролетарская', '93', 1, 182),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100083', 'Пролетарская', '94', 2, 183),"
          ++ "('Томская область', 'Томск', 'Ленинский', '100084', 'Профсоюзная', '95', 1, 184);"
    )

  -- Вставка данных в таблицу flats (добавлены новые записи)
  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO flats (id, area, \"roomCount\", \"addressId\", floor, \"floorsCount\", \"balconyArea\") VALUES "
          ++ "(1, 45, 2, 9, 2, 4, 10), "
          ++ "(2, 34, 1, 10, 1, 5, 0), "
          ++ "(3, 60, 3, 1, 5, 10, 15), "
          ++ "(4, 55, 2, 2, 3, 5, 8), "
          ++ "(5, 48, 2, 15, 4, 9, 12), "
          ++ "(6, 50, 3, 18, 2, 7, 15), "
          ++ "(7, 65, 3, 16, 2, 5, 10), "
          ++ "(8, 42, 1, 22, 1, 4, 6), "
          ++ "(9, 75, 4, 23, 3, 7, 14), "
          ++ "(10, 38, 1, 24, 5, 9, 8), "
          ++ "(11, 52, 2, 3, 2, 5, 11), "
          ++ "(12, 68, 3, 4, 4, 8, 13), "
          ++ "(13, 44, 2, 5, 6, 12, 9), "
          ++ "(14, 58, 3, 6, 3, 6, 12), "
          ++ "(15, 40, 1, 7, 1, 4, 7), "
          ++ "(16, 62, 3, 8, 5, 9, 11), "
          ++ "(17, 53, 2, 11, 4, 7, 10), "
          ++ "(18, 47, 2, 12, 2, 5, 8), "
          ++ "(19, 70, 4, 13, 6, 10, 15), "
          ++ "(20, 43, 1, 14, 3, 6, 9);"
    )

  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO houses (id, area, \"areaType\", \"addressId\", \"roomCount\", \"floorsCount\", \"basementArea\") VALUES "
          ++ "(1, 220, 2, 7, 6, 2, 0), "
          ++ "(2, 150, 1, 8, 2, 1, 0), "
          ++ "(3, 200, 1, 11, 4, 2, 60), "
          ++ "(4, 250, 2, 12, 5, 3, 80), "
          ++ "(5, 180, 1, 21, 3, 2, 50), "
          ++ "(6, 230, 2, 15, 4, 2, 70), "
          ++ "(7, 260, 1, 16, 5, 3, 90), "
          ++ "(8, 280, 2, 17, 6, 3, 100), "
          ++ "(9, 210, 1, 18, 4, 2, 60), "
          ++ "(10, 270, 2, 19, 5, 2, 80), "
          ++ "(11, 240, 1, 20, 4, 2, 70), "
          ++ "(12, 300, 2, 22, 6, 3, 100), "
          ++ "(13, 190, 1, 23, 3, 1, 50), "
          ++ "(14, 320, 2, 24, 7, 3, 110), "
          ++ "(15, 250, 1, 1, 5, 2, 80), "
          ++ "(16, 290, 2, 2, 6, 3, 100), "
          ++ "(17, 230, 1, 3, 4, 2, 70), "
          ++ "(18, 260, 2, 4, 5, 2, 80), "
          ++ "(19, 200, 1, 5, 3, 1, 60), "
          ++ "(20, 330, 2, 6, 7, 3, 120);"
    )


  -- Вставка данных в таблицу landPlot (добавлены новые записи)
  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO landPlot (id, area, \"landCategory\", \"addressId\") VALUES "
          ++ "(1, 3500, 1, 5), "
          ++ "(2, 1900, 3, 6), "
          ++ "(3, 2500, 2, 7), "
          ++ "(4, 4000, 2, 13), "
          ++ "(5, 3200, 1, 8), "
          ++ "(6, 4500, 3, 9), "
          ++ "(7, 2800, 2, 10), "
          ++ "(8, 5000, 3, 14), "
          ++ "(9, 3800, 1, 15), "
          ++ "(10, 4200, 2, 16), "
          ++ "(11, 3000, 3, 17), "
          ++ "(12, 4800, 1, 18), "
          ++ "(13, 3600, 2, 19), "
          ++ "(14, 5200, 3, 20), "
          ++ "(15, 2900, 1, 21), "
          ++ "(16, 4100, 2, 22), "
          ++ "(17, 3400, 3, 23), "
          ++ "(18, 4600, 1, 24), "
          ++ "(19, 3100, 2, 1), "
          ++ "(20, 4300, 3, 2);"
    )

  execute_
    sqlConnection
     fromString $
        "INSERT INTO garages (id, area, security, \"addressId\") VALUES "
          ++ "(1, 35, TRUE, 3), "
          ++ "(2, 25, FALSE, 4), "
          ++ "(3, 40, TRUE, 5), "
          ++ "(4, 30, FALSE, 6), "
          ++ "(5, 50, TRUE, 17), "
          ++ "(6, 45, FALSE, 7), "
          ++ "(7, 28, TRUE, 8), "
          ++ "(8, 55, FALSE, 9), "
          ++ "(9, 38, TRUE, 10), "
          ++ "(10, 42, FALSE, 11), "
          ++ "(11, 60, TRUE, 12), "
          ++ "(12, 32, FALSE, 13), "
          ++ "(13, 48, TRUE, 14), "
          ++ "(14, 36, FALSE, 15), "
          ++ "(15, 52, TRUE, 16), "
          ++ "(16, 29, FALSE, 18), "
          ++ "(17, 65, TRUE, 20), "
          ++ "(18, 34, FALSE, 21), "
          ++ "(19, 58, TRUE, 22), "
          ++ "(20, 44, FALSE, 23);"


  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO \"commercialRealEstates\" (id, area, \"objectType\",  \"addressId\") VALUES "
          ++ "(1, 500, 1, 19), "
          ++ "(2, 600, 2, 20), "
          ++ "(3, 450, 1, 21), "
          ++ "(4, 700, 2, 22), "
          ++ "(5, 550, 1, 23), "
          ++ "(6, 800, 2, 24), "
          ++ "(7, 400, 1, 1), "
          ++ "(8, 650, 2, 2), "
          ++ "(9, 520, 1, 3), "
          ++ "(10, 750, 2, 4), "
          ++ "(11, 480, 1, 5), "
          ++ "(12, 680, 2, 6), "
          ++ "(13, 580, 1, 7), "
          ++ "(14, 720, 2, 8), "
          ++ "(15, 420, 1, 9), "
          ++ "(16, 620, 2, 10), "
          ++ "(17, 540, 1, 11), "
          ++ "(18, 780, 2, 12), "
          ++ "(19, 460, 1, 13), "
          ++ "(20, 660, 2, 14);"
    )

  -- Вставка данных в таблицу wallets
  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO wallets (id, balance) VALUES "
          ++ "(1, 100100), "
          ++ "(2, 400000), "
          ++ "(3, 400200), "
          ++ "(4, 100200), "
          ++ "(5, 100000), "
          ++ "(6, 100000), "
          ++ "(7, 150000), "
          ++ "(8, 200000), "
          ++ "(9, 250000), "
          ++ "(10, 300000), "
          ++ "(11, 350000), "
          ++ "(12, 400000), "
          ++ "(13, 450000), "
          ++ "(14, 500000), "
          ++ "(15, 550000), "
          ++ "(16, 600000), "
          ++ "(17, 650000), "
          ++ "(18, 700000), "
          ++ "(19, 750000), "
          ++ "(20, 800000), "
          ++ "(21, 850000);"
    )

  -- Вставка данных в таблицу users
  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO users (id, name, surname, email, password, wallet) VALUES "
          ++ "(1, 'Egor', 'Zhvakin', 'egor.zhvakin@mail.ru', 'pass', 1), "
          ++ "(2, 'Stanislav', 'Hohlov', 'ssstttaaasssiiikk@mail.ru', 'pass', 2), "
          ++ "(3, 'Bogdan', 'Eremin', 'bodya43@mail.ru', 'pass', 3), "
          ++ "(4, 'Miron', 'Neborski', 'miroooosha@mail.ru', 'pass', 4), "
          ++ "(5, 'Vladislav', 'Verkholansev', 'verxolancev@mail.ru', 'pass', 5), "
          ++ "(6, 'Daniil', 'Ivanichev', 'yaneidd@mail.ru', 'pass', 6), "
          ++ "(7, 'Ivan', 'Petrov', 'ipetrov@mail.ru', 'pass', 1), "
          ++ "(8, 'Maria', 'Sidorova', 'msidorova@mail.ru', 'pass', 2), "
          ++ "(9, 'Alexander', 'Ivanov', 'aivanov@mail.ru', 'pass', 3), "
          ++ "(10, 'Elena', 'Smirnova', 'esmirnova@mail.ru', 'pass', 4), "
          ++ "(11, 'Dmitry', 'Popov', 'dpopov@mail.ru', 'pass', 5), "
          ++ "(12, 'Anna', 'Kuznetsova', 'akuznetsova@mail.ru', 'pass', 6), "
          ++ "(13, 'Sergey', 'Morozov', 'smorozov@mail.ru', 'pass', 1), "
          ++ "(14, 'Olga', 'Volkova', 'ovolkova@mail.ru', 'pass', 2), "
          ++ "(15, 'Pavel', 'Sokolov', 'psokolov@mail.ru', 'pass', 3), "
          ++ "(16, 'Natalia', 'Novikova', 'nnovikova@mail.ru', 'pass', 4), "
          ++ "(17, 'Andrey', 'Fedorov', 'afedorov@mail.ru', 'pass', 5), "
          ++ "(18, 'Irina', 'Orlova', 'iorlova@mail.ru', 'pass', 6), "
          ++ "(19, 'Mikhail', 'Kozlov', 'mkozlov@mail.ru', 'pass', 1), "
          ++ "(20, 'Tatiana', 'Petrova', 'tpetrova@mail.ru', 'pass', 2), "
          ++ "(21, 'Vladimir', 'Soloviev', 'vsoloviev@mail.ru', 'pass', 3);"
    )

  -- Вставка данных в таблицу ads с корректными objectType и описаниями
  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO ads (id, seller, \"objectId\", \"objectType\", cost, description, \"dealType\") VALUES "
          ++ "(1, 1, 1, 1, 10000, 'Продается уютная квартира в центре города.', 1), "
          ++ "(2, 2, 2, 1, 15000, 'Большая квартира с двумя балконами.', 1), "
          ++ "(3, 3, 3, 2, 20000, 'Современный дом с садом и гаражом.', 2 ), "
          ++ "(4, 4, 4, 3, 25000, 'Земельный участок под строительство дома.', 1), "
          ++ "(5, 1, 5, 4, 30000, 'Гараж с автоматической дверью.', 1), "
          ++ "(6, 2, 6, 1, 12000, 'Квартира рядом с парком.', 2 ), "
          ++ "(7, 3, 7, 2, 18000, 'Дом с бассейном и сауной.', 1), "
          ++ "(8, 4, 8, 3, 22000, 'Земельный участок в экологически чистом районе.', 1), "
          ++ "(9, 1, 9, 5, 35000, 'Коммерческая недвижимость в центре города.', 1), "
          ++ "(10, 4, 10, 5, 40000, 'Офисное помещение с парковкой.', 1), "
          ++ "(11, 5, 11, 1, 13000, 'Квартира с видом на реку.', 1), "
          ++ "(12, 6, 12, 1, 14000, 'Квартира в новостройке.', 1), "
          ++ "(13, 7, 13, 1, 16000, 'Квартира с евроремонтом.', 1), "
          ++ "(14, 8, 14, 1, 17000, 'Квартира в тихом районе.', 1), "
          ++ "(15, 9, 15, 1, 18000, 'Квартира с большой кухней.', 1), "
          ++ "(16, 10, 16, 1, 19000, 'Квартира с балконом.', 1), "
          ++ "(17, 11, 17, 1, 20000, 'Квартира с панорамными окнами.', 1), "
          ++ "(18, 12, 18, 1, 21000, 'Квартира в историческом центре.', 1), "
          ++ "(19, 13, 19, 1, 22000, 'Квартира с камином.', 1), "
          ++ "(20, 14, 20, 1, 23000, 'Квартира с террасой.', 1), "
          ++ "(21, 15, 1, 2, 24000, 'Дом с садом.', 1), "
          ++ "(22, 16, 2, 2, 25000, 'Дом с гаражом.', 1), "
          ++ "(23, 17, 3, 2, 26000, 'Дом с бассейном.', 1), "
          ++ "(24, 18, 4, 2, 27000, 'Дом с террасой.', 1), "
          ++ "(25, 19, 5, 2, 28000, 'Дом с камином.', 1), "
          ++ "(26, 20, 6, 2, 29000, 'Дом с видом на горы.', 2), "
          ++ "(27, 21, 7, 2, 30000, 'Дом с сауной.', 2), "
          ++ "(28, 1, 8, 2, 31000, 'Дом с большим участком.', 1), "
          ++ "(29, 2, 9, 2, 32000, 'Дом с зимним садом.', 1), "
          ++ "(30, 3, 10, 2, 33000, 'Дом с мастерской.', 1), "
          ++ "(31, 4, 11, 3, 34000, 'Земельный участок под ИЖС.', 1), "
          ++ "(32, 5, 12, 3, 35000, 'Земельный участок в лесу.', 1), "
          ++ "(33, 6, 13, 3, 36000, 'Земельный участок у озера.', 1), "
          ++ "(34, 7, 14, 3, 37000, 'Земельный участок с коммуникациями.', 2), "
          ++ "(35, 8, 15, 3, 38000, 'Земельный участок в коттеджном поселке.', 2), "
          ++ "(36, 9, 16, 3, 39000, 'Земельный участок с видом на море.', 2), "
          ++ "(37, 10, 17, 3, 40000, 'Земельный участок под ферму.', 2), "
          ++ "(38, 11, 18, 3, 41000, 'Земельный участок с лесом.', 2), "
          ++ "(39, 12, 19, 3, 42000, 'Земельный участок с озером.', 2), "
          ++ "(40, 13, 20, 3, 43000, 'Земельный участок с панорамным видом.', 2), "
          ++ "(41, 14, 1, 4, 44000, 'Гараж с подвалом.', 1), "
          ++ "(42, 15, 2, 4, 45000, 'Гараж с мастерской.', 1), "
          ++ "(43, 16, 3, 4, 46000, 'Гараж с автоматическими воротами.', 1), "
          ++ "(44, 17, 4, 4, 47000, 'Гараж с охраной.', 1), "
          ++ "(45, 18, 5, 4, 48000, 'Гараж с подземной парковкой.', 1), "
          ++ "(46, 19, 6, 4, 49000, 'Гараж с видеонаблюдением.', 1), "
          ++ "(47, 20, 7, 4, 50000, 'Гараж с системой отопления.', 1), "
          ++ "(48, 21, 8, 4, 51000, 'Гараж с ремонтной зоной.', 1), "
          ++ "(49, 1, 9, 4, 52000, 'Гараж с электричеством.', 1), "
          ++ "(50, 2, 10, 4, 53000, 'Гараж с водоснабжением.', 1), "
          ++ "(51, 3, 11, 5, 54000, 'Офисное помещение в центре.', 1), "
          ++ "(52, 4, 12, 5, 55000, 'Офисное помещение с парковкой.', 1), "
          ++ "(53, 5, 13, 5, 56000, 'Офисное помещение с видом на город.', 1), "
          ++ "(54, 6, 14, 5, 57000, 'Офисное помещение с конференц-залом.', 1), "
          ++ "(55, 7, 15, 5, 58000, 'Офисное помещение с кухней.', 1), "
          ++ "(56, 8, 16, 5, 59000, 'Офисное помещение с зоной отдыха.', 1), "
          ++ "(57, 9, 17, 5, 60000, 'Офисное помещение с охраной.', 1), "
          ++ "(58, 10, 18, 5, 61000, 'Офисное помещение с лифтом.', 1), "
          ++ "(59, 11, 19, 5, 62000, 'Офисное помещение с панорамными окнами.', 2), "
          ++ "(60, 12, 20, 5, 63000, 'Офисное помещение с террасой.', 1), "
          ++ "(61, 13, 1, 1, 64000, 'Квартира с видом на парк.', 1), "
          ++ "(62, 14, 2, 1, 65000, 'Квартира с камином.', 1), "
          ++ "(63, 15, 3, 1, 66000, 'Квартира с балконом.', 2), "
          ++ "(64, 16, 4, 1, 67000, 'Квартира с террасой.', 2), "
          ++ "(65, 17, 5, 1, 68000, 'Квартира с панорамными окнами.', 2), "
          ++ "(66, 18, 6, 1, 69000, 'Квартира в новостройке.', 1), "
          ++ "(67, 19, 7, 1, 70000, 'Квартира с евроремонтом.', 1), "
          ++ "(68, 20, 8, 1, 71000, 'Квартира в тихом районе.', 1), "
          ++ "(69, 21, 9, 1, 72000, 'Квартира с большой кухней.', 1), "
          ++ "(70, 1, 10, 1, 73000, 'Квартира с видом на реку.', 1), "
          ++ "(71, 2, 11, 2, 74000, 'Дом с садом.', 1), "
          ++ "(72, 3, 12, 2, 75000, 'Дом с гаражом.', 1), "
          ++ "(73, 4, 13, 2, 76000, 'Дом с бассейном.', 1), "
          ++ "(74, 5, 14, 2, 77000, 'Дом с террасой.', 1), "
          ++ "(75, 6, 15, 2, 78000, 'Дом с камином.', 2), "
          ++ "(76, 7, 16, 2, 79000, 'Дом с видом на горы.', 1), "
          ++ "(77, 8, 17, 2, 80000, 'Дом с сауной.', 2), "
          ++ "(78, 9, 18, 2, 81000, 'Дом с большим участком.', 2), "
          ++ "(79, 10, 19, 2, 82000, 'Дом с зимним садом.', 1), "
          ++ "(80, 11, 20, 2, 83000, 'Дом с мастерской.', 2), "
          ++ "(81, 12, 1, 3, 84000, 'Земельный участок под ИЖС.', 1), "
          ++ "(82, 13, 2, 3, 85000, 'Земельный участок в лесу.', 2), "
          ++ "(83, 14, 3, 3, 86000, 'Земельный участок у озера.', 2), "
          ++ "(84, 15, 4, 3, 87000, 'Земельный участок с коммуникациями.', 2), "
          ++ "(85, 16, 5, 3, 88000, 'Земельный участок в коттеджном поселке.', 1), "
          ++ "(86, 17, 6, 3, 89000, 'Земельный участок с видом на море.', 1), "
          ++ "(87, 18, 7, 3, 90000, 'Земельный участок под ферму.', 1), "
          ++ "(88, 19, 8, 3, 91000, 'Земельный участок с лесом.', 1), "
          ++ "(89, 20, 9, 3, 92000, 'Земельный участок с озером.', 1), "
          ++ "(90, 21, 10, 3, 93000, 'Земельный участок с панорамным видом.', 1), "
          ++ "(91, 1, 11, 4, 94000, 'Гараж с подвалом.', 1), "
          ++ "(92, 2, 12, 4, 95000, 'Гараж с мастерской.', 1), "
          ++ "(93, 3, 13, 4, 96000, 'Гараж с автоматическими воротами.', 1), "
          ++ "(94, 4, 14, 4, 97000, 'Гараж с охраной.', 1), "
          ++ "(95, 5, 15, 4, 98000, 'Гараж с подземной парковкой.', 1), "
          ++ "(96, 6, 16, 4, 99000, 'Гараж с видеонаблюдением.', 1), "
          ++ "(97, 7, 17, 4, 100000, 'Гараж с системой отопления.', 1), "
          ++ "(98, 8, 18, 4, 101000, 'Гараж с ремонтной зоной.', 1), "
          ++ "(99, 9, 19, 4, 102000, 'Гараж с электричеством.', 1), "
          ++ "(100, 10, 20, 4, 103000, 'Гараж с водоснабжением.', 1);"
    )

  -- Вставка данных в таблицу deals
  execute_
    sqlConnection
    ( fromString $
        "INSERT INTO deals (id, buyer, \"adId\", status, date, \"finalCost\") VALUES "
          ++ "(1, 2, 5, 'new', '2024-08-16', 10000), "
          ++ "(2, 1, 6, 'close', '2024-08-16', 20000), "
          ++ "(3, 4, 7, 'reject', '2024-08-16', 100000000), "
          ++ "(4, 1, 8, 'new', '2024-08-16', 17500000), "
          ++ "(5, 1, 1, 'close', '2024-08-16', 67000);"
    )

  close sqlConnection

getLastId :: Connection -> IO Integer
getLastId conn = do
  [Only lastId] <- query_ conn "SELECT last_insert_rowid();" :: IO [Only Integer]
  return lastId
